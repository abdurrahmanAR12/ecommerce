<%- include('../header.ejs') %>
    <script>
        window.product = {
            Name: "",
            Description: "",
            Price: 0,
            OverView: [],
            Stock: 0,
            Category: ''
        };
        function setProduct(data) {
            window.product = { ...window.product, ...data };
        }

        window.setProduct = setProduct;
        window.setProductOverview = setProductOverview;
        window.getIndex = getIndex;

        function onChange(e, type) {
            let val = window.product.OverView[getIndex(e.target.id)];
            if (!e.target.files)
                setProductOverview({ id: e.target.id, type: val.type ? val.type : "text", text: e.target.value });
            else if (e.target.files && e.target.file.length)
                setProduct({ ...window.product, [e.target.id]: e.target.files[0] });
        }

        function getIndex(id) {
            let keys = Object.keys(window.product.OverView)
            for (let i = 0; i < keys.length; i++) {
                let key = keys[i];
                if (window.product.OverView[key].id == id)
                    return i;
            }
            return false;
        }

        function setProductOverview(data) {
            let keys = Object.keys(window.product.OverView)
            for (let i = 0; i < keys.length; i++) {
                let key = keys[i];
                if (window.product.OverView[key].id == data.id) {
                    window.product.OverView[key] = data;
                    return;
                }
            }
            window.product.OverView.push(data);
        }

    </script>
    <div data-dial-init class="fixed z-30 bottom-6 right-6 group">
        <div id="speed-dial-menu-dropdown"
            class="flex flex-col justify-end hidden py-1 mb-4 space-y-2 bg-white border border-gray-100 rounded-lg shadow-sm dark:border-gray-600 dark:bg-gray-700">
            <ul class="text-sm text-gray-500 dark:text-gray-300">
                <li>
                    <button id="para-appender"
                        class="flex items-center w-full px-5 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 hover:text-gray-900 dark:hover:text-white">
                        <span class="text-sm font-medium">About Paragraph</span>
                    </button>
                </li>
                <li>
                    <button id="featurer"
                        class="flex items-center w-full px-5 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 hover:text-gray-900 dark:hover:text-white">
                        <span class="text-sm font-medium">Feature List</span>
                    </button>
                </li>
                <li>
                    <button id="discounter"
                        class="flex items-center w-full px-5 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 hover:text-gray-900 dark:hover:text-white">
                        <span class="text-sm font-medium">Discount bar</span>
                    </button>
                </li>
                <li>
                    <button id="colorList"
                        class="flex items-center w-full px-5 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 hover:text-gray-900 dark:hover:text-white">
                        <span class="text-sm font-medium">Color List</span>
                    </button>
                </li>
                <li>
                    <button id="btn-sizer"
                        class="flex items-center w-full px-5 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 hover:text-gray-900 dark:hover:text-white">
                        <span class="text-sm font-medium">Sizer</span>
                    </button>
                </li>
                <li>
                    <button id="uploader"
                        class="flex items-center w-full px-5 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 hover:text-gray-900 dark:hover:text-white">
                        <span class="text-sm font-medium">Product Image Uploader</span>
                    </button>
                </li>
                <li>
                    <button id="other"
                        class="flex items-center w-full px-5 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 hover:text-gray-900 dark:hover:text-white">
                        <span class="text-sm font-medium">Some Other thing</span>
                    </button>
                </li>
            </ul>
        </div>
        <button type="button" data-dial-toggle="speed-dial-menu-dropdown" aria-controls="speed-dial-menu-dropdown"
            aria-expanded="false"
            class="flex items-center justify-center ml-auto text-white bg-blue-700 rounded-full w-14 h-14 hover:bg-blue-800 dark:bg-blue-600 dark:hover:bg-blue-700 focus:ring-4 focus:ring-blue-300 focus:outline-none dark:focus:ring-blue-800">
            <svg class="w-3.5 h-3.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                viewBox="0 0 18 18">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M9 1v16M1 9h16" />
            </svg>
            <span class="sr-only">Open actions menu</span>
        </button>
    </div>

    <section
        class="bg-white dark:bg-gray-900 bg-[url('https://flowbite.s3.amazonaws.com/docs/jumbotron/hero-pattern.svg')] dark:bg-[url('https://flowbite.s3.amazonaws.com/docs/jumbotron/hero-pattern-dark.svg')]">
        <div style="width: 60em;" class="py-8 px-4 mx-auto max-w-screen-xl lg:py-16 z-10 relative">
            <form class="w-full border-b max-w-full mx-auto" enctype="multipart/form-data">
                <div class="block">
                    <div
                        class="inline-flex justify-between items-center py-1 px-1 pr-4 mb-2 text-sm text-blue-700 bg-blue-100 rounded-full dark:bg-blue-900 dark:text-blue-300 dark:hover:bg-blue-800">
                        <span class="text-xs bg-blue-600 rounded-full text-white px-4 py-1.5 mr-3">
                            <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
                                fill="currentColor" viewBox="0 0 20 20">
                                <path
                                    d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM10 15a1 1 0 1 1 0-2 1 1 0 0 1 0 2Zm1-4a1 1 0 0 1-2 0V6a1 1 0 0 1 2 0v5Z" />
                            </svg>
                        </span><span class="text-sm font-medium">Basics</span>
                    </div>
                </div>
                <!-- <h1 class="text-3xl">Basics</h1> -->
                <div class="mb-4">
                    <label class="text-sm my-2 font-medium">Title of the product: </label>
                    <input type="text" name="Name" id="Name"
                        class="block w-full p-4 mb-4 pl-5 text-sm text-gray-900 border border-gray-300 rounded-lg bg-white focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-800 dark:border-gray-700 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                        placeholder="The title of your Product..." spellcheck="false" required>
                    <label class="text-sm my-1 font-medium">Description: </label>
                    <textarea type="text" id="Description" name="Description"
                        class="block w-full mb-4 p-4 pl-5 text-sm text-gray-900 border border-gray-300 rounded-lg bg-white focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-800 dark:border-gray-700 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                        placeholder="The Product Description here..." spellcheck="false" required></textarea>
                    <label class="text-sm my-1 font-medium">Category: </label>
                    <select name="Category" id="category"
                        class="block w-full mb-4 p-4 pl-5 text-sm text-gray-900 border border-gray-300 rounded-lg bg-white focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-800 dark:border-gray-700 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                        placeholder="Product Category..." required>
                        <% for(let cat of categories){ %>
                            <option value=<%=cat.id %>><%=cat.Name %>
                            </option>
                            <% }%>
                    </select>

                    <label class="text-sm my-1 font-medium">Stock count: </label>
                    <input type="number" name="Stock" id="Stock"
                        class="block w-full p-4 pl-5 text-sm text-gray-900 border border-gray-300 rounded-lg bg-white focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-800 dark:border-gray-700 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                        placeholder="How you have the items..." required>
                    <label class="text-sm my-1 font-medium">Price: </label>
                    <input type="number" id="Price"
                        class="block w-full p-4 pl-5 text-sm text-gray-900 border border-gray-300 rounded-lg bg-white focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-800 dark:border-gray-700 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                        placeholder="Price of the Item..." required>
                    <script>
                        window.product.Category = document.getElementById("category").children[0].value;
                        document.getElementById("Name").oninput = e => window.product.Name = e.target.value;
                        document.getElementById("Description").oninput = e => window.product.Description = e.target.value;
                        document.getElementById("Stock").oninput = e => window.product.Stock = e.target.value;
                        document.getElementById("Price").oninput = e => {
                            window.product.Price = e.target.value
                        };
                        document.getElementById("category").onchange = e => {
                            window.product.Category = e.target.value;
                        }
                    </script>

                </div>
                <div class="block">
                    <div
                        class="inline-flex justify-between items-center py-1 px-1 pr-4 mb-2 text-sm text-blue-700 bg-blue-100 rounded-full dark:bg-blue-900 dark:text-blue-300 dark:hover:bg-blue-800">
                        <span class="text-xs bg-blue-600 rounded-full text-white px-4 py-1.5 mr-3">
                            <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
                                fill="currentColor" viewBox="0 0 20 20">
                                <path
                                    d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM10 15a1 1 0 1 1 0-2 1 1 0 0 1 0 2Zm1-4a1 1 0 0 1-2 0V6a1 1 0 0 1 2 0v5Z" />
                            </svg>
                        </span><span class="text-sm font-medium">Now you have to decide what to add here:</span>
                    </div>
                    <div id="appenders" class="my-2">

                    </div>
                </div>
                <div class="flex center  absolute right-2.5 bottom-2.5">
                    <a href="/admins/dashboard"
                        class="text-black mx-2 bg-gray-200 hover:bg-gray-300 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-gray-600 dark:hover:bg-gray-700 dark:focus:ring-blue-800">
                        Cancel
                    </a>
                    <button id="submitter" type="button"
                        class="text-white mx-2 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                        Done
                    </button>
                </div>
            </form>
        </div>
        <div
            class="bg-gradient-to-b from-blue-900 from-blue-50 to-transparent dark:from-blue-900 w-full h-full absolute top-0 left-0 z-0">
        </div>
    </section>


    <script>
        let pAppender = document.getElementById("para-appender"),
            appenders = document.getElementById("appenders");

        pAppender.onclick = createAboutParagraph;

        document.getElementById("uploader").onclick = createUploader;
        document.getElementById("featurer").onclick = createFeature;
        document.getElementById("btn-sizer").onclick = createSizer;
        document.getElementById("discounter").onclick = createDiscounter;
        document.getElementById("other").onclick = createOther;
        document.getElementById("colorList").onclick = createColorizer;
        document.getElementById("submitter").onclick = sendApiCall;


        function sendApiCall() {
            let body = new FormData,
                product = window.product;
            for (const key in product) {
                let f = product[key]
                if (key === "OverView")
                    body.append(key, JSON.stringify(f));
                else if (f !== null)
                    body.append(key, (f));
                else {
                    //We will do something here when we have some of the thing
                    return window.createToast("Something gone wrong, or you have something unexpected please check or Reload", "danger")
                }
            }
            fetch("/api/products/create", {
                method: "post",
                body
            }).then(async r => {
                return { status: r.status, json: await r.json() }
            }).then(response => {
                window.createToast(response.json, response.status === 200 ? "check" : "danger");
                if (response.status === 200)
                    window.location = "/admins/dashboard"
            }).catch(_e => window.createToast("Error, Failed to reach the system", "danger"));
            // window.createToast("Hello man I am fine thanks", "check")
        }


        function createAboutParagraph() {
            let input = document.createElement("textarea");
            input.className = "block w-full p-4 mb-4 pl-5 text-sm text-gray-900 border border-gray-300 rounded-lg bg-white focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-800 dark:border-gray-700 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500";
            input.placeholder = "Describe here what about this Product";
            let id = generateRandomId("textarea-");
            input.id = id;
            input.name = id;
            input.oninput = onChange;
            appenders.appendChild(input);
            setProductOverview({ id, type: "text", text: "" });
        }

        function createSizer() {
            let input = document.createElement("input"),
                p_parent = document.createElement("div"),
                pPrev = document.createElement("p");
            input.className = "block w-full p-4 mb-4 pl-5 text-sm text-gray-900 border border-gray-300 rounded-lg bg-white focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-800 dark:border-gray-700 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500";
            p_parent.className = input.className;
            input.placeholder = "The available size...";
            let id = generateRandomId("input-");
            input.id = id;
            input.name = id;
            input.oninput = e => {
                onChange(e, "size");
                pPrev.innerText = e.target.value;
            };
            appenders.appendChild(input);
            setProductOverview({ id, type: "size", text: "" });
        }

        function createFeature() {
            let input = document.createElement("input"),
                p_parent = document.createElement("div"),
                pPrev = document.createElement("p");
            input.className = "block w-full p-4 mb-4 pl-5 text-sm text-gray-900 border border-gray-300 rounded-lg bg-white focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-800 dark:border-gray-700 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500";
            p_parent.className = input.className;
            input.placeholder = "Describe the Product feature here...";
            let id = generateRandomId("input-");
            input.id = id;
            input.name = id;
            p_parent.innerHTML = "<p class='border-b mb-1 py-1'>Features: </p>";
            pPrev.className = "text-1xl"
            p_parent.appendChild(pPrev)
            input.oninput = e => {
                onChange(e, "feature");
                pPrev.innerText = "✔   " + e.target.value;
            };
            appenders.appendChild(input);
            appenders.appendChild(p_parent);
            setProductOverview({ id, type: "feature", text: "" });
        }

        function createDiscounter() {
            let input = document.createElement("input"),
                p_parent = document.createElement("div"),
                input2 = document.createElement("input");
            p_parent.className = "flex";
            input.type = "number";
            input2.type = input.type;
            input.className = "block w-md mx-4 p-4 mb-4 pl-5 text-sm text-gray-900 border border-gray-300 rounded-lg bg-white focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-800 dark:border-gray-700 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500";
            input2.className = input.className;
            input.placeholder = "From";
            input2.placeholder = "to";
            let id = generateRandomId("input-");
            input.id = id;
            input2.id = id + "_2";
            input2.name = id + "_2";
            p_parent.innerHTML = "<p class='py-1'>Discount bar: </p>";
            // p_parent.appendChild(pPrev)
            input.oninput = e => {
                let id = e.target.id,
                    val = window.product.OverView[window.getIndex(id)]
                setProductOverview({ ...val, from: e.target.value });
            };
            input2.oninput = e => {
                let val = window.product.OverView[window.getIndex(id)]
                setProductOverview({ ...val, to: e.target.value });
            };
            p_parent.appendChild(input);
            p_parent.appendChild(input2);
            appenders.appendChild(p_parent);
            setProductOverview({ id, type: "discount", from: "", to: "" });
        }

        function createOther() {
            let input = document.createElement("input"),
                p_parent = document.createElement("div"),
                input2 = document.createElement("input");
            p_parent.className = "flex";
            input.type = "number";
            input2.type = input.type;
            input.className = "block w-md mx-4 p-4 mb-4 pl-5 text-sm text-gray-900 border border-gray-300 rounded-lg bg-white focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-800 dark:border-gray-700 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500";
            input2.className = input.className;
            input.placeholder = "Field Name";
            input2.placeholder = "Field value";
            let id = generateRandomId("input-");
            input.id = id;
            input2.id = id + "_2";
            input2.name = id + "_2";

            input.oninput = e => {
                let id = e.target.id,
                    val = window.product.OverView[window.getIndex(id)]
                setProductOverview({ ...val, name: e.target.value });
            };
            input2.oninput = e => {
                let val = window.product.OverView[window.getIndex(id)]
                setProductOverview({ ...val, value: e.target.value });
            };
            p_parent.appendChild(input);
            p_parent.appendChild(input2);
            appenders.appendChild(p_parent);
            setProductOverview({ id, type: "other", name: "", value: "" });
        }

        function createUploader() {
            let input = document.createElement("input"),
                imageParent = document.createElement("div");
            input.type = "file";
            input.accept = "image/*"
            input.className = "block w-full p-4 mb-4 pl-5 text-sm text-gray-900 border border-gray-300 rounded-lg bg-white focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-800 dark:border-gray-700 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500";
            imageParent.className = input.className;
            input.placeholder = "Describe here what about this Product";
            let id = generateRandomId("input-");
            input.id = id;
            input.name = id;
            input.onchange = e => {
                if (e.target.files.length) {
                    setProduct({ [id]: e.target.files[0] });
                    createImageCanvas(e.target.files[0], "imgParent-" + id);
                }
                else {
                    setProduct({ [id]: null });
                    document.getElementById("imgParent-" + id).innerHTML = "<p class='my-2'>Preview:</p>";
                };
            };
            appenders.appendChild(input);
            imageParent.id = "imgParent-" + id;
            imageParent.innerHTML = "<p class='my-2'>Preview:</p>";
            appenders.appendChild(imageParent);
            setProduct({ [id]: null })
        }

        function createColorizer() {
            let input = document.createElement("select");
            input.className = "block w-full p-4 mb-4 pl-5 text-sm text-gray-900 border border-gray-300 rounded-lg bg-white focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-800 dark:border-gray-700 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500";
            input.placeholder = "Describe here what about this Product";
            let id = generateRandomId("input-");
            input.id = id;
            input.name = id;
            input.onchange = e => setProductOverview({ [id]: e.target.value });
            fetch("/api/data/colors").then(r => r.json()).then(colors => {
                for (let i = 0; i < colors.length; i++) {
                    let op = document.createElement("option");
                    op.value = colors[i];
                    op.innerText = op.value;
                    input.appendChild(op);
                }
                input.value = colors[0];
                setProductOverview({ [id]: colors[0] })
                appenders.appendChild(input);
            });
        }

        function createImageCanvas(file, id) {
            let r = new FileReader();
            r.onload = e => {
                let img = document.createElement("img"),
                    imageP = document.getElementById(id);
                img.src = r.result;
                imageP.innerHTML = "<p class='my-2'>Preview:</p>";
                imageP.appendChild(img);
            }
            r.readAsDataURL(file);
        }

        function generateRandomId(prefiex = "") {
            let abc = 'abcdefghijklmnopqrstuvxyz10875',
                value = [];
            for (let i = 0; i < abc.length; i++) {
                let s = abc[parseInt(Math.random() * abc.length)];
                value.push(s);
            }
            if (document.getElementById(value.join("")))
                return generateRandomId(prefiex);
            return value.join("");
        }

    </script>


    <%- include('sidebar.ejs') %>
        <%- include('../headerEnd.ejs') %>